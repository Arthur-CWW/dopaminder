import { signIn, signOut, useSession } from "next-auth/react";
import Head from "next/head";
import Link from "next/link";

import { api } from "~/utils/api";

export default function Home() {
  const hello = api.example.hello.useQuery({ text: "from tRPC" });

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
function Sidebar() {
  const feedbackLinks = [
    {
      // replace with environment variable
      href: `https://chrome.google.com/webstore/detail/${process.env.NAME}/${process.env.EXTENSION_ID}/reviews`,
      text: "Add a review",
    },
    {
      href: "https://github.com/Arthur-CWW/dopaminder/issues",
      text: "Report a bug",
    },
    {
      href: process.env.FEEDBACK_FORM,
      text: "Send feedback",
    },
  ];
  return (
    <aside className="bg-light flex h-screen w-full flex-col justify-between p-5">
      <nav className=" flex flex-col text-start">
        <div className="flex items-center gap-2 pb-2 text-start text-lg font-semibold">
          <img src="/dopamine.jpg" alt="logo" width="" className="w-10" />
          <h5 className="">Intention</h5>
        </div>
        <Link className=" active" href="/">
          Sites
        </Link>
        {/* <span className="after:w-2 after:content-[⏰]">
          TODO Fix pseudo elements
          </span> */}
        <Link className="after:w-2 after:content-[⏰]" href="/schedule">
          Schedule
        </Link>
        <Link className="" href="/goals">
          🎯 Goals
        </Link>
        <Link className="" href="/stats">
          📊 Stats
        </Link>
        <Link className="" href="/privacy">
          🔒 Privacy
        </Link>
      </nav>
      <ul className="align-left text-sm">
        {feedbackLinks.map((link) => (
          <li key={link.href}>
            <a
              href={link.href}
              className="btn btn-block btn-primary"
              target="_blank"
              rel="noopener noreferrer"
            >
              {link.text}
            </a>
          </li>
        ))}
      </ul>
    </aside>
  );
}

function AuthShowcase() {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = api.example.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined }
  );

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <p className="text-center text-2xl text-white">
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
        {secretMessage && <span> - {secretMessage}</span>}
      </p>
      <button
        className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
}
